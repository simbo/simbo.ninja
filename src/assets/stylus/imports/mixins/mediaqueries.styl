/**
 * Mediaquery mixins
 */

$breakpoints = {
  xs: {
    min: 0,
    max: 479px
  },
  s: {
    min: 480px,
    max: 1023px
  },
  m: {
    min: 1024px,
    max: 1439px
  },
  l: {
    min: 1440px
    max: 0
  }
}


// mediaquery high density displays
mq-retina()
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx)
    block


// mediaquery using min-width
mq-min($min-width)
  @media only screen and (min-width: $min-width)
    block


// mediaquery using max- and min-width
mq-minmax($min-width, $max-width)
  @media only screen and (min-width: $min-width) and (max-width: $max-width)
    block


// mediaquery using max-width
mq-max($max-width)
  @media only screen and (max-width: $max-width)
    block


// mediaquery using defined breakpoints, optionally using min/max
mq-bp($key, $minmax = false, $bp = $breakpoints)
  $key = toString(s('%s', $key))
  $minmax = toString(s('%s', $minmax))
  unless ($bp[$key])
    return
  if ($minmax == 'max')
    if ($bp[$key].max == 0)
      block
    else
      +mq-max($bp[$key].max)
        block
  else if ($minmax == 'min')
    if ($bp[$key].min == 0)
      block
    else
      +mq-min($bp[$key].min)
        block
  else if ($bp[$key].min != 0) and ($bp[$key].max != 0)
    +mq-minmax($bp[$key].min, $bp[$key].max)
      block


// generate empty media query placeholder for proper sorting with mqpacker
mq-placeholders()
  for $key, $bp in $breakpoints
    if ($bp.min != 0)
      +mq-min($bp.min)
        s('')
    if ($bp.max != 0)
      +mq-max($bp.max)
        s('')
    if ($bp.min != 0) and ($bp.max != 0)
      +mq-minmax($bp.min, $bp.max)
        s('')
